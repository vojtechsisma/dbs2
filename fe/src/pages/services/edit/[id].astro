---
import { Card, CardTitle, CardHeader, CardContent, CardDescription, CardFooter } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Label } from "@/components/ui/label";
import Header from "../../../components/Header.astro";
import Footer from "../../../components/Footer.astro";
import BaseHead from "../../../components/BaseHead.astro";
import { SITE_TITLE, API, formatDate } from "../../../consts";

// Check if user is logged in and is a technician
const token = Astro.cookies.get("token")?.value;
const userRole = Astro.cookies.get("userRole")?.value;

if (!token || userRole !== "TECHNICIAN") {
  return Astro.redirect("/login");
}

// Get service ID from params
const { id } = Astro.params;
const serviceId = Number(id);

// Fetch service details
let service = null;
let error = '';
let success = false;

try {
  const res = await fetch(`${import.meta.env.API_URL}${API.SERVICES.BY_ID(serviceId)}`, {
    headers: {
      Authorization: `Bearer ${token}`,
    },
  });
  
  if (res.ok) {
    service = await res.json();
  } else {
    error = 'Service record not found';
  }
} catch (e) {
  error = 'An error occurred while fetching the service record';
  console.error(e);
}

// Handle form submission
if (Astro.request.method === 'POST' && !error) {
  try {
    const formData = await Astro.request.formData();
    const repairDescription = formData.get('repairDescription');
    
    const updateData = {
      repairDescription,
    };
    
    const res = await fetch(`${import.meta.env.API_URL}${API.SERVICES.BY_ID(serviceId)}`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify(updateData),
    });

    if (res.ok) {
      success = true;
      service = await res.json();
    } else {
      const errorData = await res.json();
      error = errorData.message || 'An error occurred while updating the service record.';
    }
  } catch (e) {
    error = 'An unexpected error occurred. Please try again.';
    console.error(e);
  }
}
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={`Edit Service | ${SITE_TITLE}`} description="Edit service record" />
  </head>
  <body class="min-h-screen flex flex-col">
    <Header />
    <main class="container mx-auto px-4 py-8 flex-1">
      <div class="flex items-center mb-6">
        <a href={`/services/${id}`} class="text-blue-500 hover:text-blue-700 mr-2">
          &larr; Back to Service
        </a>
        <h1 class="text-3xl font-bold">Edit Service</h1>
      </div>
      
      <div class="max-w-3xl mx-auto">
        {error ? (
          <div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-6">
            <p>{error}</p>
            <div class="mt-4">
              <a href="/services" class="text-red-700 underline">
                Return to services
              </a>
            </div>
          </div>
        ) : (
          <Card>
            <CardHeader>
              <CardTitle>Edit Service Record</CardTitle>
              <CardDescription>
                Update service information for {service?.bike?.model || 'Unknown Bike'}
              </CardDescription>
            </CardHeader>
            <CardContent>
              {success && (
                <div class="bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded mb-6">
                  Service record updated successfully!
                </div>
              )}
              
              <div class="space-y-4 mb-6">
                <div class="bg-gray-50 p-4 rounded-md">
                  <h3 class="font-medium">Service Information</h3>
                  <div class="grid grid-cols-2 gap-3 mt-2">
                    <div>
                      <p class="text-xs text-gray-500">Bike</p>
                      <p>
                        {service?.bike?.model || 'Unknown'} 
                        ({service?.bike?.brand?.name || service?.bike?.brandOther || 'Unknown brand'})
                      </p>
                    </div>
                    <div>
                      <p class="text-xs text-gray-500">Customer</p>
                      <p>{service?.bike?.owner?.name || 'Unknown'}</p>
                    </div>
                    <div>
                      <p class="text-xs text-gray-500">Service Date</p>
                      <p>{formatDate(service?.serviceDate)}</p>
                    </div>
                    <div>
                      <p class="text-xs text-gray-500">Service ID</p>
                      <p>{service?.id}</p>
                    </div>
                  </div>
                </div>
                
                <form method="POST" class="space-y-4">
                  <div class="space-y-2">
                    <Label for="repairDescription">Repair Description</Label>
                    <Textarea 
                      id="repairDescription" 
                      name="repairDescription" 
                      rows={8}
                      required
                    >
                      {service?.repairDescription}
                    </Textarea>
                    <p class="text-sm text-gray-500">
                      Provide detailed information about the service performed, parts replaced, and any notes for the customer.
                    </p>
                  </div>
                  
                  <div class="pt-4 flex gap-3">
                    <Button type="submit" class="flex-1">Update Service Record</Button>
                    <a href={`/services/${id}`}>
                      <Button variant="outline" type="button">Cancel</Button>
                    </a>
                  </div>
                </form>
              </div>
            </CardContent>
            <CardFooter className="flex justify-between border-t pt-4">
              <div class="flex gap-3">
                <a href={`/services/images/${id}`}>
                  <Button variant="outline">Manage Images</Button>
                </a>
              </div>
            </CardFooter>
          </Card>
        )}
      </div>
    </main>
    <Footer />
  </body>
</html>