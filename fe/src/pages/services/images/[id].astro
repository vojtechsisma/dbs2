---
import {
  Card,
  CardTitle,
  CardHeader,
  CardContent,
  CardDescription,
  CardFooter,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import Header from "../../../components/Header.astro";
import Footer from "../../../components/Footer.astro";
import BaseHead from "../../../components/BaseHead.astro";
import { SITE_TITLE, API } from "../../../consts";

// Check if user is logged in and is a technician
const token = Astro.cookies.get("token")?.value;
const userRole = Astro.cookies.get("userRole")?.value;

if (!token || userRole !== "TECHNICIAN") {
  return Astro.redirect("/login");
}

// Get service ID from params
const { id } = Astro.params;
const serviceId = Number(id);

// Fetch service details
let service = null;
let images = [];
let error = "";
let success = false;
let uploadSuccess = false;
let deleteSuccess = false;

try {
  const res = await fetch(
    `${import.meta.env.API_URL}${API.SERVICES.BY_ID(serviceId)}`,
    {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    },
  );

  if (res.ok) {
    service = await res.json();

    // Fetch service images
    try {
      const imagesRes = await fetch(
        `${import.meta.env.API_URL}/images?serviceId=${serviceId}`,
        {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        },
      );

      if (imagesRes.ok) {
        images = await imagesRes.json();
      }
    } catch (imageError) {
      console.error("Error fetching images:", imageError);
    }
  } else {
    error = "Service record not found";
  }
} catch (e) {
  error = "An error occurred while fetching the service record";
  console.error(e);
}

// Handle image upload
if (Astro.request.method === "POST" && !error) {
  try {
    const formData = await Astro.request.formData();

    // Check if this is a delete request
    const isDelete = formData.get("_action") === "delete";

    if (isDelete) {
      const imageId = formData.get("imageId");

      // Delete the image
      const res = await fetch(
        `${import.meta.env.API_URL}${API.IMAGES.BY_ID(Number(imageId))}`,
        {
          method: "DELETE",
          headers: {
            Authorization: `Bearer ${token}`,
          },
        },
      );

      if (res.ok) {
        deleteSuccess = true;
        // Remove the image from the array
        images = images.filter((img) => img.id !== Number(imageId));
      } else {
        const errorData = await res.json();
        error = errorData.message || "Failed to delete the image.";
      }
    } else {
      // This is an upload request
      const file = formData.get("image");
      const description = formData.get("description");

      if (!file || !(file instanceof File) || file.size === 0) {
        error = "Please select a valid image file.";
      } else {
        // Create a multipart form data
        const uploadFormData = new FormData();
        uploadFormData.append("file", file);
        uploadFormData.append("serviceId", String(serviceId));
        if (description) {
          uploadFormData.append("description", description);
        }

        const res = await fetch(
          `${import.meta.env.API_URL}${API.IMAGES.UPLOAD}`,
          {
            method: "POST",
            headers: {
              Authorization: `Bearer ${token}`,
            },
            body: uploadFormData,
          },
        );

        if (res.ok) {
          uploadSuccess = true;
          // Add the new image to the array
          const newImage = await res.json();
          images = [...images, newImage];
        } else {
          const errorData = await res.json();
          error = errorData.message || "Failed to upload the image.";
        }
      }
    }

    success = uploadSuccess || deleteSuccess;
  } catch (e) {
    error = "An unexpected error occurred. Please try again.";
    console.error(e);
  }
}
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead
      title={`Manage Service Images | ${SITE_TITLE}`}
      description="Upload and manage service images"
    />
  </head>
  <body class="min-h-screen flex flex-col">
    <Header />
    <main class="container mx-auto px-4 py-8 flex-1">
      <div class="flex items-center mb-6">
        <a
          href={`/services/${id}`}
          class="text-blue-500 hover:text-blue-700 mr-2"
        >
          &larr; Back to Service
        </a>
        <h1 class="text-3xl font-bold">Manage Service Images</h1>
      </div>

      {
        error ? (
          <div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded max-w-3xl mx-auto">
            {error}
          </div>
        ) : (
          <div class="max-w-4xl mx-auto">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div class="md:col-span-1">
                <Card>
                  <CardHeader>
                    <CardTitle>Upload Image</CardTitle>
                    <CardDescription>Add documentation photos</CardDescription>
                  </CardHeader>
                  <CardContent>
                    {uploadSuccess && (
                      <div class="bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded mb-6">
                        Image uploaded successfully!
                      </div>
                    )}

                    <form
                      method="POST"
                      enctype="multipart/form-data"
                      class="space-y-4"
                    >
                      <div class="space-y-2">
                        <Label for="image">Select Image</Label>
                        <Input
                          id="image"
                          name="image"
                          type="file"
                          accept="image/*"
                          required
                        />
                      </div>

                      <div class="space-y-2">
                        <Label for="description">Description (Optional)</Label>
                        <Input
                          id="description"
                          name="description"
                          placeholder="Brief description of the image"
                        />
                      </div>

                      <Button type="submit" class="w-full">
                        Upload Image
                      </Button>
                    </form>
                  </CardContent>
                </Card>

                <div class="mt-4">
                  <Card>
                    <CardHeader>
                      <CardTitle>Service Info</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div class="space-y-2">
                        <div>
                          <p class="text-sm text-gray-500">Bike</p>
                          <p>{service?.bike?.model || "Unknown"}</p>
                        </div>
                        <div>
                          <p class="text-sm text-gray-500">Service Date</p>
                          <p>
                            {new Date(
                              service?.serviceDate,
                            ).toLocaleDateString()}
                          </p>
                        </div>
                        <div>
                          <p class="text-sm text-gray-500">Total Images</p>
                          <p>{images.length}</p>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </div>
              </div>

              <div class="md:col-span-2">
                <Card>
                  <CardHeader>
                    <CardTitle>Service Images</CardTitle>
                    <CardDescription>Manage uploaded images</CardDescription>
                  </CardHeader>
                  <CardContent>
                    {deleteSuccess && (
                      <div class="bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded mb-6">
                        Image deleted successfully!
                      </div>
                    )}

                    {images.length === 0 ? (
                      <div class="text-center py-8 text-gray-500">
                        <p>
                          No images have been uploaded for this service yet.
                        </p>
                        <p class="text-sm mt-2">
                          Use the form on the left to upload service images.
                        </p>
                      </div>
                    ) : (
                      <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                        {images.map((image) => (
                          <div class="border rounded-lg overflow-hidden">
                            <div class="h-48 overflow-hidden">
                              <img
                                src={`${import.meta.env.API_URL}${image.path}`}
                                alt={image.description || "Service image"}
                                class="w-full h-full object-cover"
                              />
                            </div>
                            <div class="p-3">
                              {image.description && (
                                <p class="text-sm mb-2">{image.description}</p>
                              )}
                              <div class="flex justify-between items-center">
                                <a
                                  href={`${import.meta.env.API_URL}${image.path}`}
                                  target="_blank"
                                  rel="noopener noreferrer"
                                  class="text-blue-500 hover:underline text-sm"
                                >
                                  View Full Size
                                </a>
                                <form method="POST" class="inline">
                                  <input
                                    type="hidden"
                                    name="_action"
                                    value="delete"
                                  />
                                  <input
                                    type="hidden"
                                    name="imageId"
                                    value={image.id}
                                  />
                                  <Button
                                    type="submit"
                                    variant="destructive"
                                    size="sm"
                                  >
                                    Delete
                                  </Button>
                                </form>
                              </div>
                            </div>
                          </div>
                        ))}
                      </div>
                    )}
                  </CardContent>
                  <CardFooter>
                    <a
                      href={`/services/${id}`}
                      class="text-blue-500 hover:underline"
                    >
                      Return to service details
                    </a>
                  </CardFooter>
                </Card>
              </div>
            </div>
          </div>
        )
      }
    </main>
    <Footer />
  </body>
</html>
