---
import { Card, CardTitle, CardHeader, CardContent, CardDescription, CardFooter } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import BaseHead from "../../components/BaseHead.astro";
import { SITE_TITLE, API, formatDate, STATUS_COLORS } from "../../consts";

// Check if user is logged in
const token = Astro.cookies.get("token")?.value;
const userRole = Astro.cookies.get("userRole")?.value;
const userId = Astro.cookies.get("userId")?.value;

if (!token) {
  return Astro.redirect("/login");
}

// Get reservation ID from params
const { id } = Astro.params;

// Fetch reservation details
let reservation = null;
let error = '';

try {
  const res = await fetch(`${import.meta.env.API_URL}${API.RESERVATIONS.BY_ID(Number(id))}`, {
    headers: {
      Authorization: `Bearer ${token}`,
    },
  });
  
  if (res.ok) {
    reservation = await res.json();
    
    // Check permission - customers can only view their own reservations
    if (userRole === 'CUSTOMER' && reservation.customer?.id !== Number(userId)) {
      return Astro.redirect("/dashboard/customer");
    }
  } else {
    error = 'Reservation not found';
  }
} catch (e) {
  error = 'An error occurred while fetching the reservation';
  console.error(e);
}

// Handle status update
let statusUpdateSuccess = false;
let statusUpdateError = '';

if (Astro.request.method === 'POST' && userRole === 'TECHNICIAN') {
  try {
    const formData = await Astro.request.formData();
    const newStatus = formData.get('status');
    
    const res = await fetch(`${import.meta.env.API_URL}${API.RESERVATIONS.BY_ID(Number(id))}/status`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify({ status: newStatus }),
    });

    if (res.ok) {
      statusUpdateSuccess = true;
      reservation = await res.json();
    } else {
      const errorData = await res.json();
      statusUpdateError = errorData.message || 'An error occurred while updating status';
    }
  } catch (e) {
    statusUpdateError = 'An unexpected error occurred';
    console.error(e);
  }
}
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={`Reservation Details | ${SITE_TITLE}`} description="View reservation details" />
  </head>
  <body class="min-h-screen flex flex-col">
    <Header />
    <main class="container mx-auto px-4 py-8 flex-1">
      <div class="flex items-center mb-6">
        <a href={userRole === 'CUSTOMER' ? "/reservations" : "/reservations/manage"} class="text-blue-500 hover:text-blue-700 mr-2">
          &larr; Back to Reservations
        </a>
        <h1 class="text-3xl font-bold">Reservation Details</h1>
      </div>
      
      {error ? (
        <div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded max-w-3xl mx-auto">
          {error}
        </div>
      ) : (
        <div class="max-w-4xl mx-auto">
          {statusUpdateSuccess && (
            <div class="bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded mb-6">
              Reservation status updated successfully!
            </div>
          )}
          
          {statusUpdateError && (
            <div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-6">
              {statusUpdateError}
            </div>
          )}
          
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div class="md:col-span-2">
              <Card>
                <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                  <div>
                    <CardTitle>Reservation #{reservation.id}</CardTitle>
                    <CardDescription>
                      Created {formatDate(reservation.createdAt)}
                    </CardDescription>
                  </div>
                  <div className="bg-primary-50 px-3 py-1 rounded-full flex items-center space-x-1">
                    <span class={`px-2 py-1 rounded-full text-xs ${STATUS_COLORS[reservation.status]}`}>
                      {reservation.status}
                    </span>
                  </div>
                </CardHeader>
                <CardContent>
                  <div class="space-y-4">
                    <div>
                      <h3 class="text-sm font-medium text-gray-500">Reservation Date</h3>
                      <p class="mt-1">{formatDate(reservation.reservationDate)}</p>
                    </div>
                    
                    <div>
                      <h3 class="text-sm font-medium text-gray-500">Problem Description</h3>
                      <p class="mt-1 whitespace-pre-line">{reservation.problemDescription}</p>
                    </div>
                    
                    <div class="border-t pt-4">
                      <h3 class="text-sm font-medium text-gray-500">Bike Details</h3>
                      <div class="mt-2 grid grid-cols-2 gap-3">
                        <div>
                          <p class="text-xs text-gray-500">Model</p>
                          <p>{reservation.bike?.model || 'N/A'}</p>
                        </div>
                        <div>
                          <p class="text-xs text-gray-500">Brand</p>
                          <p>{reservation.bike?.brand?.name || reservation.bike?.brandOther || 'N/A'}</p>
                        </div>
                        <div>
                          <p class="text-xs text-gray-500">Type</p>
                          <p>{reservation.bike?.type || 'N/A'}</p>
                        </div>
                        <div>
                          <p class="text-xs text-gray-500">Bike ID</p>
                          <p>{reservation.bike?.id}</p>
                        </div>
                      </div>
                      
                      <div class="mt-3">
                        <a 
                          href={`/bikes/${reservation.bike?.id}`}
                          class="text-blue-500 hover:underline text-sm"
                        >
                          View bike details
                        </a>
                      </div>
                    </div>
                    
                    {userRole === 'TECHNICIAN' && (
                      <div class="border-t pt-4">
                        <h3 class="text-sm font-medium text-gray-500">Customer Information</h3>
                        <div class="mt-2">
                          <p class="text-xs text-gray-500">Name</p>
                          <p>{reservation.customer?.name || 'N/A'}</p>
                          
                          <p class="text-xs text-gray-500 mt-2">Email</p>
                          <p>{reservation.customer?.email || 'N/A'}</p>
                          
                          <p class="text-xs text-gray-500 mt-2">Phone</p>
                          <p>{reservation.customer?.phone || 'N/A'}</p>
                        </div>
                      </div>
                    )}
                    
                    {reservation.services && reservation.services.length > 0 && (
                      <div class="border-t pt-4">
                        <h3 class="text-sm font-medium text-gray-500">Service Records</h3>
                        <div class="mt-2 space-y-3">
                          {reservation.services.map((service) => (
                            <div class="border rounded-md p-3">
                              <div class="flex justify-between">
                                <div>
                                  <p class="font-medium">{formatDate(service.serviceDate)}</p>
                                  <p class="text-sm text-gray-500">
                                    Technician: {service.technician?.name || 'Unknown'}
                                  </p>
                                </div>
                                <a 
                                  href={`/services/${service.id}`}
                                  class="text-blue-500 hover:underline text-sm"
                                >
                                  View details
                                </a>
                              </div>
                              <p class="mt-2 text-sm line-clamp-2">{service.repairDescription}</p>
                            </div>
                          ))}
                        </div>
                      </div>
                    )}
                  </div>
                </CardContent>
                <CardFooter className="flex justify-between border-t pt-4">
                  {userRole === 'TECHNICIAN' && (
                    <div class="flex gap-3">
                      {['NEW', 'CONFIRMED', 'PROCESSING'].includes(reservation.status) && (
                        <a href={`/services/complete/${reservation.id}`}>
                          <Button>Complete Service</Button>
                        </a>
                      )}
                      <a href={`/reservations/edit/${reservation.id}`}>
                        <Button variant="outline">Edit Reservation</Button>
                      </a>
                    </div>
                  )}
                  {userRole === 'CUSTOMER' && reservation.status !== 'CLOSED' && (
                    <form method="POST" action={`/api/reservations/${reservation.id}/cancel`}>
                      <Button variant="outline" type="submit">Cancel Reservation</Button>
                    </form>
                  )}
                </CardFooter>
              </Card>
            </div>
            
            <div>
              {userRole === 'TECHNICIAN' && (
                <Card>
                  <CardHeader>
                    <CardTitle>Update Status</CardTitle>
                    <CardDescription>Change reservation status</CardDescription>
                  </CardHeader>
                  <CardContent>
                    {/* Status Update Form */}
                    <form method="POST" class="space-y-4">
                      <div class="space-y-2">
                        <label for="status" class="text-sm font-medium">Status</label>
                        <select 
                          id="status" 
                          name="status" 
                          value={reservation.status} 
                          class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
                        >
                          <option value="NEW" selected={reservation.status === 'NEW'}>New</option>
                          <option value="CONFIRMED" selected={reservation.status === 'CONFIRMED'}>Confirmed</option>
                          <option value="PROCESSING" selected={reservation.status === 'PROCESSING'}>Processing</option>
                          <option value="DONE" selected={reservation.status === 'DONE'}>Done</option>
                          <option value="CLOSED" selected={reservation.status === 'CLOSED'}>Closed</option>
                        </select>
                      </div>
                      <Button type="submit" class="w-full">Update Status</Button>
                    </form>
                  </CardContent>
                </Card>
              )}
              
              <div class="mt-4">
                <Card>
                  <CardHeader>
                    <CardTitle>Quick Actions</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div class="space-y-2">
                      {userRole === 'TECHNICIAN' ? (
                        <>
                          <a href={`/reservations/manage`} class="block text-blue-500 hover:underline">
                            View all reservations
                          </a>
                          <a href={`/services/pending`} class="block text-blue-500 hover:underline">
                            View pending services
                          </a>
                          {reservation.customer && (
                            <a href={`/customers/${reservation.customer.id}`} class="block text-blue-500 hover:underline">
                              View customer profile
                            </a>
                          )}
                          {reservation.bike && (
                            <a href={`/bikes/${reservation.bike.id}`} class="block text-blue-500 hover:underline">
                              View bike details
                            </a>
                          )}
                        </>
                      ) : (
                        <>
                          <a href={`/reservations`} class="block text-blue-500 hover:underline">
                            View all your reservations
                          </a>
                          <a href={`/reservations/create`} class="block text-blue-500 hover:underline">
                            Book new service
                          </a>
                          {reservation.bike && (
                            <a href={`/bikes/${reservation.bike.id}`} class="block text-blue-500 hover:underline">
                              View bike details
                            </a>
                          )}
                        </>
                      )}
                    </div>
                  </CardContent>
                </Card>
              </div>
              
              {reservation.bike?.images && reservation.bike.images.length > 0 && (
                <div class="mt-4">
                  <Card>
                    <CardHeader>
                      <CardTitle>Bike Images</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div class="grid grid-cols-2 gap-2">
                        {reservation.bike.images.slice(0, 4).map((image) => (
                          <div class="aspect-square rounded-md overflow-hidden">
                            <img 
                              src={`${import.meta.env.API_URL}${image.path}`} 
                              alt={image.description || 'Bike image'} 
                              class="w-full h-full object-cover"
                            />
                          </div>
                        ))}
                      </div>
                      {reservation.bike.images.length > 4 && (
                        <div class="mt-2 text-center">
                          <a 
                            href={`/bikes/${reservation.bike.id}`}
                            class="text-blue-500 hover:underline text-sm"
                          >
                            View all {reservation.bike.images.length} images
                          </a>
                        </div>
                      )}
                    </CardContent>
                  </Card>
                </div>
              )}
            </div>
          </div>
        </div>
      )}
    </main>
    <Footer />
  </body>
</html>